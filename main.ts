// ********************************************************************************************************************
import * as THREE from 'three';
// ********************************************************************************************************************
import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';
import { DungeonGenerator } from './code/dungeon/dungeon-generator';
// ********************************************************************************************************************

// ********************************************************************************************************************
// scene & renderer
// ********************************************************************************************************************
const scene = new THREE.Scene();

scene.background = new THREE.Color('#333333');

const renderer = new THREE.WebGLRenderer();

// ********************************************************************************************************************
// camera
// ********************************************************************************************************************
const camera = new THREE.PerspectiveCamera(50, 1, 0.1, 1000);

camera.position.z = 256;

new OrbitControls(camera, renderer.domElement);

// ********************************************************************************************************************
// lighting
// ********************************************************************************************************************
const sun = new THREE.DirectionalLight('#fff0e0', 1.0);

sun.position.z = -100; sun.position.y = 64;

scene.add(sun);

// ********************************************************************************************************************
// dungeon
// ********************************************************************************************************************
const dungeon = new DungeonGenerator(32);

const parts = dungeon.generate();

// ********************************************************************************************************************
// initialise
// ********************************************************************************************************************
function initialise() {

    addEventListener('resize', resize);

    document.body.appendChild(renderer.domElement);

    resize();

    update();
}

// ********************************************************************************************************************
// resize
// ********************************************************************************************************************
function resize() {

    camera.aspect = window.innerWidth / window.innerHeight;

    renderer.setSize(window.innerWidth, window.innerHeight);
}

// ********************************************************************************************************************
// update
// ********************************************************************************************************************
function update() {

    requestAnimationFrame(update);

    renderer.render(scene, camera);
}
initialise();
