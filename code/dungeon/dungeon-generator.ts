// ********************************************************************************************************************
import { IGenerator } from "../generators/generator.interface";
// ********************************************************************************************************************
import { DungeonPart } from "./dungeon-part";
// ********************************************************************************************************************
import { DungeonPartRoom } from "./dungeon-part-room";
// ********************************************************************************************************************
export class DungeonGenerator implements IGenerator<DungeonPart[]> {

    // ****************************************************************************************************************
    // constructor
    // ****************************************************************************************************************
    constructor(public readonly elements: number = 32) { }

    // ****************************************************************************************************************
    // function:    generate
    // ****************************************************************************************************************
    // parameters:  n/a
    // ****************************************************************************************************************
    // returns:     the parts
    // ****************************************************************************************************************
    public generate(): DungeonPart[] {

        var parts: DungeonPart[] = [];

        var root = new DungeonPartRoom();

        parts.push(root);

        return parts;
    }
}
