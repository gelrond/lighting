// ********************************************************************************************************************
import { Mesh } from "three";
// ********************************************************************************************************************
import { randInt } from "three/src/math/MathUtils";
// ********************************************************************************************************************
import { GeometryBuilder } from "../geometry/geometry-builder";
// ********************************************************************************************************************
import { Vector2 } from "../types/vector2";
// ********************************************************************************************************************
import { DungeonPart, PartType } from "./dungeon-part";
// ********************************************************************************************************************
export class DungeonPartRoom extends DungeonPart {

    // ****************************************************************************************************************
    // constructor
    // ****************************************************************************************************************
    constructor(public position: Vector2 = new Vector2()) { super(); this.position = position; }

    // ****************************************************************************************************************
    // function:    getSizeX
    // ****************************************************************************************************************
    // parameters:  n/a
    // ****************************************************************************************************************
    // returns:     the size x
    // ****************************************************************************************************************
    protected override getSizeX(): number {

        return randInt(1, 3);
    }

    // ****************************************************************************************************************
    // function:    getSizeY
    // ****************************************************************************************************************
    // parameters:  n/a
    // ****************************************************************************************************************
    // returns:     the size Y
    // ****************************************************************************************************************
    protected override getSizeY(): number {

        return randInt(1, 3);
    }

    // ****************************************************************************************************************
    // function:    getType
    // ****************************************************************************************************************
    // parameters:  n/a
    // ****************************************************************************************************************
    // returns:     the type
    // ****************************************************************************************************************
    public override getType(): PartType {

        return PartType.ROOM;
    }
}
